* 1 引言
** 1.1 算法
   实现事先设计的求解某个问题的方法.
   算法关注的是计算中设计的数据的组织方法, 数据结构 数据不同的组织方法. 不同的结构有不同的作用效果.
** 1.2 典型问题 -- 连通性
   1 明确问题
   连通性问题:
     1 记录数据对信息
     2 判定一个数据对 是否连通，连通则通过算法过滤, 不通过则在记录中增加, 然后返回数据对.
  
   确定算法执行的基本操作
     基本操作的确定很重要, 使得我们为连通问题设计的算法可以用于很多类似的问题. 
     将基本操作模块化.这样更灵活具有可移植性.

   2 求解策略:
   对于连通性问题, 得到一个新对, 
     1 首先, 确定是否表示一个新的连接
     2 *什么意思* 然后, 把这个连接信息合并到已知的连通关系中, 使他能够检查将要看到的连接.
    
     封装这两个基本任务为抽象操作.封装了两个基本操作, 不妨碍求解原问题.
     并且,在求解类似问题时, 还会可移植使用.

     现在抽象设计为 算法和数据结构:
     1 查找 包含给定数据项的集和
     2 合并 用他们的并集 替换包含两个给定数据项的集合.
     
     
   数据结构时基础, 半成品 半成品的实现方式很重要, 实现的好, 那么算法就会越容易 高效率.
   
   
   

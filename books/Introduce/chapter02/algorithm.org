
** 2.2 分析算法
   分析算法意味着预测算法需要的资源.
   1 时间
   2 空间
   算法运行时间 与 输入规模 称函数关系.
   输入规模的概念 依赖与问题, 
   排序 搜索问题 输入规模 可以使用 输入项数目.
   而两个数相乘, 输入规模 应该用两个数字的计算机位数目 作为输入规模.
   
   最坏情况、平均情况分析
   
   一般考虑最坏情况
   1 最坏情况运行时间给出了任何输入的运行时间的上界.
   2 最坏情况经常会出现. 搜索算法中 会经常发现搜索数据并不存在.
   3 平均情况, 一般情况下 都和最坏情况一样差.

   结果 我们会对平均情况 感兴趣, 概率分析技术, 常常用于分析平均情况的数据分布.
   表征算法的运行效率的指标 还是最坏情况的运行时间.

   增长量级
   真正感兴趣的是运行时间的增长量级.随意只考虑运行时间公式中的最高次项.



** 2.3 设计算法.
   增量方法: 插入排序
   分治方法: 归并排序, 比插入排序快得多.

*** 2.3.1 分治法
    *许多有用的算法在结构上是递归的*:
    *分治法解决一个问题, 多次递归调用自身, 来解决组成该问题的 规模更小的相同问题的子问题,
    递归的求解这些问题, 然后合并这些子问题的结果,得到原问题的结果*

    分治模式在每层递归时 的 *三个步骤*
    *1 分解   将原问题分解为若干子问题, 这些子问题都是原问题的规模更小的实例.*
    *2 解决   递归的求解各个子问题. 直到递归求解的问题规模够小, 直接求解.*
    *3 合并   合并这些子问题, 递归返回得到原问题的解.*

    归并排序: 最标准的分治模式
    1 分解 分解n个元素的序列称 n/2元素的两个子序列
    2 解决 递归排序两个子序列, 直到1个元素长度的子序列 直接排序(1个元素直接有序)
    3 合并 从排序的子序列递归返回生成原问题的解

    
    
    
    


    
    
    
